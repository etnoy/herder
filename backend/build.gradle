plugins {
    id 'java'
    id "org.springframework.boot" version "3.0.0"
    id 'io.spring.dependency-management' version '1.1.0'
    id 'eclipse'
    id 'jacoco'
    id "io.freefair.lombok" version "6.5.1"
    id "org.sonarqube" version "3.3"
    id "com.diffplug.spotless" version "6.12.0"
    id 'com.adarshr.test-logger' version '3.1.0'
}

group = 'org.owasp.herder'
version = '0.0.1'
description = 'Herder'

repositories {
    mavenCentral()
    mavenLocal()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

sourceSets {
    test {
        java {
            srcDirs = ["src/test/java"]
        }
    }

    integrationTest {
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output

        java.srcDir file('src/integration-test/java')
        resources.srcDir file('src/integration-test/resources')
    }
}

dependencies {
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-guava:2.13.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.2.2'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.springframework.data:spring-data-commons:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.0.0'
    implementation 'io.r2dbc:r2dbc-h2:0.9.1.RELEASE'
    implementation 'com.h2database:h2:2.1.214'
    implementation 'io.r2dbc:r2dbc-spi:1.0.0.RELEASE'
    implementation 'com.github.spotbugs:spotbugs:4.7.3'

    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'net.sourceforge.htmlunit:htmlunit:2.60.0'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive:3.0.0'
    implementation 'org.springframework.data:spring-data-mongodb:4.0.0'
    implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:7.1.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.1'
    implementation 'com.fasterxml.jackson:jackson-bom:2.13.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.2'
    implementation 'org.yaml:snakeyaml:1.32'
    implementation 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.apache.bcel:bcel:6.6.1'

    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.1'

    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testImplementation 'org.assertj:assertj-guava:3.4.0'
    testImplementation "org.projectlombok:lombok"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation "org.testcontainers:mongodb:1.17.3"
    testImplementation "org.testcontainers:junit-jupiter:1.17.3"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.8.2'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.apache.commons:commons-lang3'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.5.13'

    integrationTestCompileOnly 'org.projectlombok:lombok'
    integrationTestAnnotationProcessor "org.projectlombok:lombok"
    integrationTestImplementation "org.projectlombok:lombok"
    integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
    integrationTestImplementation 'org.springframework.security:spring-security-test'
    integrationTestImplementation 'org.junit.jupiter:junit-jupiter-api'
    integrationTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    integrationTestImplementation 'nl.jqno.equalsverifier:equalsverifier:3.4.2'
    integrationTestImplementation 'io.projectreactor:reactor-test:3.4.14'
    integrationTestImplementation 'org.apache.commons:commons-lang3:3.11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    integrationTestCompile.extendsFrom testCompile
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task integrationTest(type: Test) {
    description = 'Runs integration tests'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    outputs.upToDateWhen { false }

    shouldRunAfter test
}

integrationTest {
    useJUnitPlatform()

    finalizedBy jacocoTestReport

    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

test {
    useJUnitPlatform()

    finalizedBy jacocoTestReport

    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

sonarqube {
    properties {
        property 'sonar.host.url', 'https://sonarcloud.io'
        property "sonar.projectName", "Herder"
        property "sonar.projectKey", "etnoy_herder"
        property "sonar.organization", "etnoy"
        properties["sonar.tests"] += "src/integration-test/java"
    }
}

spotless {
  format 'misc', {
        target '**/.gitignore', '**/*.gradle', '**/*.md', '**/*.sh'
    trimTrailingWhitespace()
    indentWithSpaces()
    endWithNewline()
  }
  java {
    prettier(['prettier': '2.8.1', 'prettier-plugin-java': '2.0.0'])
    toggleOffOn()
    removeUnusedImports()
    trimTrailingWhitespace()
    endWithNewline()
    formatAnnotations()
    licenseHeaderFile "${project.rootDir}/license.template"
  }
}
